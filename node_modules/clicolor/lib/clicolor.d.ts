/// <reference types="node" />
import { Format, PenDescription } from "./pen";
import { Span, Spans } from "./span";
export declare type Options = {
    width?: number;
    frequency?: number;
    useColor?: boolean;
    quiet?: boolean;
    styles?: {
        [key: string]: string;
    };
};
export declare class CliColor {
    private _useColor;
    private _onTTY;
    private _quiet;
    private _updater;
    styles: Map<string, string>;
    constructor(options?: Options);
    useColor(x: boolean): void;
    quiet(x: boolean): void;
    isColor(): boolean;
    isQuiet(): boolean;
    displayTo(stream: NodeJS.WritableStream, ...message: Spans): void;
    display(...message: Spans): void;
    displayVerbose(...message: Spans): void;
    displayError(...message: Spans): void;
    displayWarning(...message: Spans): void;
    merge(...spans: Spans): Span;
    color(colorName: string, ...spans: Spans): Span;
    backgroundColor(colorName: string, ...spans: Spans): Span;
    underline(...spans: Spans): Span;
    screenWidth(): any;
    status(...message: Spans): void;
    padLeft(length: number, ...spans: Spans): Span;
    padRight(length: number, ...spans: Spans): Span;
    format(descriptors: Format | {
        [key: string]: PenDescription;
    }, s: string): Span;
}
export declare function clicolor(options?: Options): CliColor;
